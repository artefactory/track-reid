[tool.poetry]
name = "trackreid"
authors = ["tristanpepinartefact <tristan.pepin@artefact.com>"]
description = "This Git repository is dedicated to the development of a Python library aimed at correcting the results of tracking algorithms. The primary goal of this library is to reconcile and reassign lost or misidentified IDs, ensuring a consistent and accurate tracking of objects over time. "
version = "0.0.2"
readme = "README.md"


[tool.poetry.dependencies]
python = "3.10.13"
numpy = "1.24.2"
llist = "0.7.1"
pydantic = "2.4.2"
bytetracker = { git = "https://github.com/TomDarmon/bytetrack-pip.git", branch = "main" }
lapx = "^0.5.5"
opencv-python = "^4.8.1.78"
tqdm = "^4.66.1"
pillow = "^10.1.0"


[tool.poetry.group.dev.dependencies]
black = "22.10.0"
ruff = "0.0.272"
isort = "5.12.0"
pre-commit = "3.3.3"
pytest = "7.3.2"
ipykernel = "6.24.0"
mkdocs = "1.4.3"
mkdocs-material = "9.1.15"
mkdocstrings-python = "1.1.2"
bandit = "1.7.5"
nbstripout = "0.6.1"



[build-system]
requires = ["poetry-core>=1.0.0", "Cython=^0.29.23"]
build-backend = "poetry.core.masonry.api"


[project.urls]
"Homepage" = "https://github.com/artefactory-fr/track-reid"
"Documentation" = "https://artefactory-fr.github.io/track-reid"

[tool.setuptools]
packages = ["lib", "config", "tests"]

[tool.ruff]
select = [
  "E",
  "W",
  "F",
  "I",
  "N",
  "Q",
  "ARG",
  "PTH",
  "PD",
] # See: https://beta.ruff.rs/docs/rules/
ignore = ["D203", "D213", "ANN101", "ANN102"]
line-length = 120
target-version = "py310"
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

[tool.ruff.pydocstyle]
convention = "google"

# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html
[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.direnv
    | \.eggs
    | \.git
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | venv
  )/
)
'''

[tool.isort]
profile = "black"


[tool.semantic_release]
version_variables = ["trackreid/__init__.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
commit_message = "chore(release): {version}\n\nAutomatically generated by semantic-release"
tag_format = "{version}"

[tool.semantic_release.changelog]
exclude_commit_patterns = ['''^chore\(release\).*''']

[tool.semantic_release.remote]
token = { env = "GH_TOKEN" }
